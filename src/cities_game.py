# coding=utf-8
class Player:
    def __init__(self, name='компьютер', is_ai=False):
        self.name = name
        self.is_AI = is_ai
        self.mistakes = 0


class Game:
    CITIES = {
        'а': ['абакан', 'азов', 'александров', 'алексин', 'альметьевск',
              'анапа', 'ангарск', 'анжеро-судженск', 'апатиты', 'арзамас',
              'армавир', 'арсеньев', 'артем', 'архангельск', 'асбест',
              'астрахань', 'ачинск'],
        'б': ['балаково', 'балахна', 'балашиха', 'балашов', 'барнаул',
              'батайск', 'белгород', 'белебей', 'белово', 'белогорск',
              'белорецк', 'белореченск', 'бердск', 'березники', 'березовский',
              'бийск', 'биробиджан', 'благовещенск', 'бор', 'борисоглебск',
              'боровичи', 'братск', 'брянск', 'бугульма', 'буденновск',
              'бузулук', 'буйнакск'],
        'в': ['великие луки', 'великий новгород', 'верхняя пышма', 'видное',
              'владивосток', 'владикавказ', 'владимир', 'волгоград',
              'волгодонск', 'волжск', 'волжский', 'вологда', 'вольск',
              'воркута', 'воронеж', 'воскресенск', 'воткинск', 'всеволожск',
              'выборг', 'выкса', 'вязьма'],
        'г': ['гатчина', 'геленджик', 'георгиевск', 'глазов', 'горно-алтайск',
              'грозный', 'губкин', 'гудермес', 'гуково', 'гусь-хрустальный'],
        'д': ['дербент', 'дзержинск', 'димитровград', 'дмитров',
              'долгопрудный', 'домодедово', 'донской', 'дубна'],
        'е': ['евпатория', 'егорьевск', 'ейск', 'екатеринбург', 'елабуга',
              'елец', 'ессентуки'],
        'ж': ['железногорск', 'жигулевск', 'жуковский'],
        'з': ['заречный', 'зеленогорск', 'зеленодольск', 'златоуст'],
        'и': ['иваново', 'ивантеевка', 'ижевск', 'избербаш', 'иркутск',
              'искитим', 'ишим', 'ишимбай'],
        'й': ['йошкар-ола'],
        'к': ['казань', 'калининград', 'калуга', 'каменск-уральский',
              'каменск-шахтинский', 'камышин', 'канск', 'каспийск', 'кемерово',
              'керчь', 'кинешма', 'кириши', 'киров', 'кирово-чепецк',
              'киселевск', 'кисловодск', 'клин', 'клинцы', 'ковров', 'когалым',
              'коломна', 'комсомольск-на-амуре', 'копейск', 'королев',
              'кострома', 'котлас', 'красногорск', 'краснодар',
              'краснокаменск', 'краснокамск', 'краснотурьинск', 'красноярск',
              'кропоткин', 'крымск', 'кстово', 'кузнецк', 'кумертау', 'кунгур',
              'курган', 'курск', 'кызыл'],
        'л': ['лабинск', 'лениногорск', 'ленинск-кузнецкий', 'лесосибирск',
              'липецк', 'лиски', 'лобня', 'лысьва', 'лыткарино', 'люберцы'],
        'м': ['магадан', 'магнитогорск', 'майкоп', 'махачкала', 'междуреченск',
              'мелеуз', 'миасс', 'минеральные воды', 'минусинск', 'михайловка',
              'михайловск', 'мичуринск', 'москва', 'мурманск', 'муром',
              'мытищи'],
        'н': ['набережные челны', 'назарово', 'назрань', 'нальчик',
              'наро-фоминск', 'находка', 'невинномысск', 'нерюнгри',
              'нефтекамск', 'нефтеюганск', 'нижневартовск', 'нижнекамск',
              'нижний новгород', 'нижний тагил', 'новоалтайск', 'новокузнецк',
              'новокуйбышевск', 'новомосковск', 'новороссийск', 'новосибирск',
              'новотроицк', 'новоуральск', 'новочебоксарск', 'новочеркасск',
              'новошахтинск', 'новый уренгой', 'ногинск', 'норильск',
              'ноябрьск', 'нягань'],
        'о': ['обнинск', 'одинцово', 'озерск', 'октябрьский', 'омск', 'орел',
              'оренбург', 'орехово-зуево', 'орск'],
        'п': ['павлово', 'павловский посад', 'пенза', 'первоуральск', 'пермь',
              'петрозаводск', 'петропавловск-камчатский', 'подольск',
              'полевской', 'прокопьевск', 'прохладный', 'псков', 'пушкино',
              'пятигорск'],
        'р': ['раменское', 'ревда', 'реутов', 'ржев', 'рославль', 'россошь',
              'ростов-на-дону', 'рубцовск', 'рыбинск', 'рязань'],
        'с': ['салават', 'сальск', 'самара', 'санкт-петербург', 'саранск',
              'сарапул', 'саратов', 'саров', 'свободный', 'севастополь',
              'северодвинск', 'северск', 'сергиев посад', 'серов', 'серпухов',
              'сертолово', 'сибай', 'симферополь', 'славянск-на-кубани',
              'смоленск', 'соликамск', 'солнечногорск', 'сосновый бор', 'сочи',
              'ставрополь', 'старый оскол', 'стерлитамак', 'ступино', 'сургут',
              'сызрань', 'сыктывкар'],
        'т': ['таганрог', 'тамбов', 'тверь', 'тимашевск', 'тихвин', 'тихорецк',
              'тобольск', 'тольятти', 'томск', 'троицк', 'туапсе', 'туймазы',
              'тула', 'тюмень'],
        'у': ['узловая', 'улан-удэ', 'ульяновск', 'урус-мартан',
              'усолье-сибирское', 'уссурийск', 'усть-илимск', 'уфа', 'ухта'],
        'ф': ['феодосия', 'фрязино'],
        'х': ['хабаровск', 'ханты-мансийск', 'хасавюрт', 'химки'],
        'ч': ['чайковский', 'чапаевск', 'чебоксары', 'челябинск', 'черемхово',
              'череповец', 'черкесск', 'черногорск', 'чехов', 'чистополь',
              'чита'],
        'ш': ['шадринск', 'шали', 'шахты', 'шуя'],
        'щ': ['щекино', 'щелково'],
        'э': ['электросталь', 'элиста', 'энгельс'],
        'ю': ['южно-сахалинск', 'юрга'],
        'я': ['якутск', 'ялта', 'ярославль']
        }

    def __init__(self, mode):
        self.mode = mode
        self.answers = []
        self.current_char = ''
        if self.mode == 'С другом':
            self.player_one = Player(
                name=input('Введите имя первого игрока:\n')
                )
            self.player_two = Player(
                name=input('Введите имя второго игрока:\n')
                )
        else:
            self.player_one = Player(
                name=input('Введите имя игрока:\n')
                )
            self.player_two = Player(is_ai=True)
        self.current_player = self.player_one
        self.next_player = self.player_two
        self._make_move()

    def _make_move(self):
        if self.current_player.is_AI:
            word = self._peek_word()
        else:
            word = input().strip().lower()
        if word == 'сдаюсь':
            return self._game_over()
        ok = self._check_answer(word)
        if self.current_player.mistakes > 2:
            return self._game_over()
        if ok:
            self._swap_players()
            if not self.CITIES.get(self.current_char):
                return self._game_over()
        return self._make_move()

    @staticmethod
    def _get_char(word):
        last_char = word[-1]
        return last_char if last_char not in 'цыь' else word[-2]

    def _check_answer(self, word):
        if not self.current_char:
            if word not in self.CITIES.get(word[0], []):
                self.current_player.mistakes += 1
                print('Неверный город')
                return False
            self.current_char = word[0]
        else:
            if word in self.answers:
                self.current_player.mistakes += 1
                print('Уже называли')
                return False
            if (word[0] != self.current_char or
                    word not in self.CITIES.get(word[0], [])):
                self.current_player.mistakes += 1
                print('Неверный город')
                return False
        self.answers.append(word)
        self.CITIES[self.current_char].remove(word)
        self.current_player.mistakes = 0
        self.current_char = self._get_char(word)
        return True

    def _game_over(self):
        winner = self.next_player.name
        print(f'Конец игры.\nПобедил {winner}.')

    def _swap_players(self):
        self.current_player, self.next_player = (
            self.next_player, self.current_player
            )

    def _peek_word(self):
        word = self.CITIES.get(self.current_char)[0]
        print(word.title())
        return word


if __name__ == '__main__':
    Game(input('Как играем, с другом или с компьютером?\n'))
